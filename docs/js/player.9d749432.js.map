{"version":3,"sources":["js/player.js"],"names":["player","document","getElementById","audio","querySelector","timer","progressBar","progress","minutes","seconds","isPlaying","audelem","paused","toggleMusic","pause","classList","remove","add","play","addEventListener","e","currentTime","Math","floor","textContent","style","width","duration","toFixed","event","coordStart","getBoundingClientRect","left","p","pageX","offsetWidth"],"mappings":";AAAA,IAAMA,EAASC,SAASC,eAAe,YACjCC,EAAQF,SAASG,cAAc,yBAC/BC,EAAQJ,SAASG,cAAc,4BAC/BE,EAAcL,SAASG,cAAc,2BACrCG,EAAWN,SAASG,cAAc,uBACpCI,EAAU,KACVC,EAAU,KAMRC,EAAY,SAACC,GACV,OAACA,EAAQC,QAMZC,EAAc,WACdH,EAAUP,IACZA,EAAMW,QACNd,EAAOe,UAAUC,OAAO,YACxBhB,EAAOe,UAAUE,IAAI,aAErBd,EAAMe,OACNlB,EAAOe,UAAUE,IAAI,YACrBjB,EAAOe,UAAUC,OAAO,aAI5BhB,EAAOmB,iBAAiB,QAASN,GAEjCV,EAAMgB,iBAAiB,aAAc,SAACC,GAChCC,IAAAA,EAAcC,KAAKC,MAAMpB,EAAMkB,aACnChB,EAAMmB,YAAiBhB,GAAAA,OAAAA,EAAWC,KAAAA,OAAAA,GAClCD,EAAUc,KAAKC,MAAMF,EAAc,IAAM,IACzCZ,EAAUY,EAAc,GAAKA,EAAcA,EAAwB,GAAVb,GAC3C,KAAIC,EAAU,IAAMA,GAC9BD,EAAU,KAAIA,EAAU,IAAMA,GAClCF,EAAYmB,MAAMC,MACfvB,EAAMkB,YAAclB,EAAMwB,SAASC,QAAQ,GAAM,IAAM,MAG5DrB,EAASY,iBAAiB,QAAS,SAAUU,GACvCC,IAAAA,EAAa,KAAKC,wBAAwBC,KAE1CC,GADWJ,EAAMK,MACDJ,GAAc,KAAKK,YACvC7B,EAAYmB,MAAMC,MAAuB,IAAfO,EAAEL,QAAQ,GAAW,IAE/CzB,EAAMkB,YAAcY,EAAI9B,EAAMwB,SAC1BjB,EAAUP,GACTA,EAAMe,OADWL","file":"player.9d749432.js","sourceRoot":"..\\src","sourcesContent":["const player = document.getElementById(\"i-Player\");\r\nconst audio = document.querySelector(\".home__music-controls\");\r\nconst timer = document.querySelector(\".home__music-actual-time\");\r\nconst progressBar = document.querySelector(\".home__music-player-bar\");\r\nconst progress = document.querySelector(\".home__music-player\");\r\nlet minutes = \"00\";\r\nlet seconds = \"00\";\r\n\r\n/**\r\n * @param {HTMLElement} audelem\r\n * @returns true if the music is playing\r\n */\r\nconst isPlaying = (audelem) => {\r\n  return !audelem.paused;\r\n};\r\n\r\n/**\r\n * toggle the play pause button\r\n */\r\nconst toggleMusic = () =>  {\r\n  if (isPlaying(audio)) {\r\n    audio.pause();\r\n    player.classList.remove(\"bx-pause\");\r\n    player.classList.add(\"bx-play\");\r\n  } else {\r\n    audio.play();\r\n    player.classList.add(\"bx-pause\");\r\n    player.classList.remove(\"bx-play\");\r\n  }\r\n}\r\n\r\nplayer.addEventListener(\"click\", toggleMusic);\r\n\r\naudio.addEventListener(\"timeupdate\", (e) => {\r\n  let currentTime = Math.floor(audio.currentTime);\r\n  timer.textContent = `${minutes}.${seconds}`;\r\n  minutes = Math.floor(currentTime / 60) % 60;\r\n  seconds = currentTime < 60 ? currentTime : currentTime - minutes * 60;\r\n  if (seconds < 10) seconds = \"0\" + seconds;\r\n  if (minutes < 10) minutes = \"0\" + minutes;\r\n  progressBar.style.width =\r\n    (audio.currentTime / audio.duration.toFixed(3)) * 100 + \"%\";\r\n});\r\n\r\nprogress.addEventListener('click', function (event) {\r\n  let coordStart = this.getBoundingClientRect().left\r\n  let coordEnd = event.pageX\r\n  let p = (coordEnd - coordStart) / this.offsetWidth\r\n  progressBar.style.width = p.toFixed(3) * 100 + '%'\r\n\r\n  audio.currentTime = p * audio.duration\r\n  if(!isPlaying(audio)) toggleMusic()\r\n  else audio.play()\r\n})"]}